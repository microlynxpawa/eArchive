<style>
  /* Modal Overlay */
  #send-files-modal-email {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: none;
    z-index: 1000;
    justify-content: center;
    align-items: center;
  }

  /* Modal Content */
  .modal-content-email {
    background-color: #fff;
    border-radius: 8px;
    padding: 20px;
    width: 60%;
    margin: 20% auto;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    z-index: 1100;
    position: relative;
  }

  /* Close Button */
  .close-button-email {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 24px;
    color: #333;
    cursor: pointer;
    background: none;
    border: none;
  }

  /* Input Field and Button Styling */
  #email-search-container {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
  }

  #email-search-input {
    width: calc(100% - 50px);
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
  }

  #email-search-button {
    margin-left: 10px;
    padding: 10px;
    font-size: 16px;
    cursor: pointer;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 4px;
  }

  /* User List Section */
  #email-user-list-container {
    margin-top: 20px;
    max-height: 200px;
    overflow-y: auto;
    border: 1px solid #ccc;
    padding: 10px;
    border-radius: 4px;
  }

  .email-user-item {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
  }

  .email-user-item input {
    margin-right: 10px;
  }

  #send-files-button-email {
    margin-top: 20px;
    padding: 10px 20px;
    font-size: 16px;
    background-color: #28a745;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
</style>

<div id="send-files-modal-email">
  <div class="modal-content-email">
    <button class="close-button-email" id="close-send-files-modal-email">&times;</button>
    <h2>Send Files Via Email</h2>
    <p class="text-secondary">Enter the eArchive user email address</p>

    <div id="email-search-container">
      <input type="text" id="email-search-input" placeholder="Type email(s)" />
      <button id="email-search-button">üîç Search</button>
    </div>

    <div id="email-user-list-container">
      <!-- Dynamically populated list of users -->
    </div>

    <button id="send-files-button-email" disabled>Send Files</button>
  </div>
</div>

  <script>
 document.addEventListener("DOMContentLoaded", () => {
  const sendFilesModalEmail = document.getElementById("send-files-modal-email");
  const closeSendFilesModalEmail = document.getElementById("close-send-files-modal-email");
  const sendViaEmailButton = document.getElementById("send-button");
  const emailSearchButton = document.getElementById("email-search-button");
  const emailSearchInput = document.getElementById("email-search-input");
  const emailUserListContainer = document.getElementById("email-user-list-container");
  const sendFilesButtonEmail = document.getElementById("send-files-button-email");

  let selectedEmails = [];

  // Open Modal
  sendViaEmailButton.addEventListener("click", () => {
    sendFilesModalEmail.style.display = "flex";
  });

  // Close Modal
  closeSendFilesModalEmail.addEventListener("click", () => {
    sendFilesModalEmail.style.display = "none";
  });

  // Search Users by Email
  emailSearchButton.addEventListener("click", async () => {
    const query = emailSearchInput.value.trim();
    console.log("Query being sent to backend:", query);

    if (!query) return alert("Please enter an email or search term.");

    try {
      const response = await fetch(`/admin/searchUsersByEmail?q=${encodeURIComponent(query)}`);
      if (!response.ok) throw new Error("Failed to fetch user list.");

      const users = await response.json();

      emailUserListContainer.innerHTML = ""; // Clear previous results
      users.forEach(user => {
        const userItem = document.createElement("div");
        userItem.classList.add("email-user-item");

        userItem.innerHTML = `
          <input type="checkbox" value="${user.email}" class="email-user-checkbox" />
          <span>${user.email}</span>
        `;

        emailUserListContainer.appendChild(userItem);
      });

      // Enable/Disable Send Button Based on Selection
      const checkboxes = document.querySelectorAll(".email-user-checkbox");
      checkboxes.forEach(checkbox => {
        checkbox.addEventListener("change", () => {
          selectedEmails = Array.from(checkboxes)
            .filter(cb => cb.checked)
            .map(cb => cb.value);

          sendFilesButtonEmail.disabled = selectedEmails.length === 0;
        });
      });
    } catch (error) {
      alert("Error: " + error.message);
    }
  });

  // Send Files
  sendFilesButtonEmail.addEventListener("click", async () => {
    if (selectedEmails.length === 0) return alert("No users selected.");
    const confirmation = confirm("Are you sure you want to share file(s)?");
    if (!confirmation) return;

    try {
      const response = await fetch("/admin/sendFilesToUsers-email", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          users: selectedEmails,
          files: selectedFiles, // Ensure selectedFiles is globally defined
        }),
      });

      if (!response.ok) throw new Error("Failed to send files.");

      alert("Files sent successfully.");
      sendFilesModalEmail.style.display = "none";
    } catch (error) {
      alert("Error: file not found in the database " + error.message);
    }
  });
});

  </script>