<div class="card my-3">
  <div class="card-header">
    <h5>Document Scanner</h5>
  </div>
  <div class="card-body">
    <div class="text-center mb-3">
      <select id="scannerList" class="form-select w-auto d-inline-block mb-2" style="min-width: 200px;"></select>
      <button id="scanButton" class="btn btn-primary mb-2">Start Scanning</button>
      <button id="uploadButton" class="btn btn-success mb-2" disabled>Upload Scanned Document</button>
    </div>
    <div>
      <span class="text-muted"> To use the scanning feature, you need to install the scanner service on your machine so click on the link bellow to download it and preceed to installation (if not installed) using the link bellow. ðŸ‘‡</span><br>
      <a href="https://www.dynamsoft.com/web-twain/downloads/" target="_blank">Install Scanner Service</a>
    </div>
    <div id="preview" class="mt-3 text-center">
      <!-- Scanned document preview will appear here -->
    </div>
    <div id="dwtcontrolContainer" style="width: 0; height: 0;"></div>
  </div>
</div>

<%- contentFor("pageHeader") %>
<%- include('../components/page-title.ejs', {title: 'Scan Documents' }) %>
<%- contentFor("customJS") %>
<script src="https://unpkg.com/dwt/dist/dynamsoft.webtwain.min.js"></script>
<script>
  // Toast notification utility
  function showToast(message, type = 'success') {
    let toast = document.createElement('div');
    toast.className = 'custom-toast-notification ' + (type === 'success' ? 'toast-success' : 'toast-error');
    toast.innerText = message;
    toast.style.position = 'fixed';
    toast.style.bottom = '30px';
    toast.style.right = '30px';
    toast.style.background = type === 'success' ? '#22c55e' : '#dc3545';
    toast.style.color = '#fff';
    toast.style.padding = '16px 28px';
    toast.style.borderRadius = '8px';
    toast.style.fontSize = '1.1rem';
    toast.style.boxShadow = '0 2px 12px rgba(0,0,0,0.18)';
    toast.style.zIndex = 12000;
    document.body.appendChild(toast);
    setTimeout(() => { toast.remove(); }, 2500);
  }

  let DWObject = null;

  Dynamsoft.DWT.ProductKey = "t01928AUAAGsyKSVk7HxDglLrFiQr3mBLNFn27QKws8/3EIZVfRuogxk5RoTtkFUYC5MS+VSwZBwArikW3/iA4iRssgE3Hja6cvIEp4x3Co13YoKTHzmJbJyuqdpL3Bc2sAfeEZDjORwASiCdpQI+al+9MmQA9wDpANI7A3rA6S1c8lWZvFCMNqf3Cnrm5AlOGe8sG2SMExOc/MjpGkSvtGzutltqEJQvJwO4B8gpgP+PrGkQqgHuAdIAojTDxQ9kRCrq;t01908AUAAGfviGABZUHplDnaJqjNs9CgQ2ZqEQTb/EAPV/QqCd+UrqV7wrwKT0ltGho1ESS/F6OTyJm50wEfooMJymPtAJZ15dQOTrZ3Uto70cGpj5wiQ2qG9bRNGhcH6Ay8E8DtOmwAcmCdSwF87NJ7ZdgBWgNYAVibA2rA6SqOm69SBiT/e+dAo1M7ONnemQekjRMdnPrIOQXEBTHjtNpxDQjym7MDtAbwFMD/ITsEREpAawAPAK1TWGd+lXAq5A=="; // <-- replace with your free trial key
  Dynamsoft.DWT.ResourcesPath = "https://unpkg.com/dwt/dist/";
  Dynamsoft.DWT.Containers = [{
    WebTwainId: 'dwtcontrol',
    ContainerId: 'dwtcontrolContainer'
  }];

  Dynamsoft.DWT.Load()
    .then(() => {
      DWObject = Dynamsoft.DWT.GetWebTwain('dwtcontrol');

      if (!DWObject) {
        showToast("Failed to load scanner control.", 'error');
        return;
      }

      const scannerList = document.getElementById("scannerList");
      DWObject.GetSourceNames().forEach((name, index) => {
        const option = document.createElement("option");
        option.value = index;
        option.text = name;
        scannerList.add(option);
      });

      if (DWObject.SourceCount === 0) {
        showToast("No scanners detected. Please connect a scanner and refresh.", 'error');
        document.getElementById("scanButton").disabled = true;
      }

    }).catch((err) => {
      console.error("DWT load error:", err);
      showToast("Failed to initialize scanner. Please check your setup.", 'error');
    });

  // Handle scan
  document.getElementById("scanButton").addEventListener("click", () => {
    const selectedIndex = document.getElementById("scannerList").value;
    if (DWObject && DWObject.SourceCount > 0) {
      DWObject.SelectSourceByIndex(parseInt(selectedIndex));
      DWObject.OpenSource();
      DWObject.AcquireImage({
        IfShowUI: false,
        PixelType: Dynamsoft.DWT.EnumDWT_PixelType.TWPT_RGB,
        Resolution: 200,
        OnPostTransfer: () => {
          DWObject.CloseSource();
          DWObject.GetImage(0).GetDataURL("image/png").then((dataURL) => {
            const img = document.createElement("img");
            img.src = dataURL;
            img.className = "img-thumbnail";
            img.style.maxWidth = "80%";

            const preview = document.getElementById("preview");
            preview.innerHTML = "";
            preview.appendChild(img);

            document.getElementById("uploadButton").disabled = false;
          });
        },
        OnTransferCancelled: () => {
          DWObject.CloseSource();
        },
        OnAcquireImageError: (errCode, errStr) => {
          DWObject.CloseSource();
          showToast("Scan failed: " + errStr, 'error');
        },
      });
    }
  });

  // Handle upload
  document.getElementById("uploadButton").addEventListener("click", () => {
    DWObject.GetImage(0).GetBlob("image/png").then((blob) => {
      const formData = new FormData();
      formData.append("file", blob, "scanned-document.png");

      fetch("/upload", {
          method: "POST",
          body: formData,
        })
        .then((response) => response.json())
        .then((data) => {
          showToast("Document uploaded successfully!", 'success');
          console.log("Upload response:", data);
        })
        .catch((error) => {
          console.error("Upload failed:", error);
          showToast("Failed to upload the document.", 'error');
        });
    });
  });
</script>
